{"mappings":"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","sources":["<anon>","src/bloomFilter.js","index.js","src/list.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire7471\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire7471\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"1REjr\", function(module, exports) {\n\n$parcel$export(module.exports, \"BloomFilter\", () => $15ba02f13978e1c5$export$fbc160adde9cf656);\n// Simple Bloom Filter implementation\nclass $15ba02f13978e1c5$export$fbc160adde9cf656 {\n    constructor(size = 10, hashCount = 3){\n        this.size = size;\n        this.hashCount = hashCount;\n        this.bits = new Array(size).fill(false);\n    }\n    // Simple hash functions\n    hash(str, seed) {\n        let hash = 0;\n        for(let i = 0; i < str.length; i++)hash = (hash * seed + str.charCodeAt(i)) % this.size;\n        return hash;\n    }\n    add(item) {\n        for(let i = 1; i <= this.hashCount; i++){\n            const pos = this.hash(item, i);\n            this.bits[pos] = true;\n        }\n    }\n    contains(item) {\n        for(let i = 1; i <= this.hashCount; i++){\n            const pos = this.hash(item, i);\n            if (!this.bits[pos]) return false;\n        }\n        return true;\n    }\n}\n\n});\n\nfunction $d9f8d6210fe3edfa$export$a6ac03347624a471(items = []) {\n    const container = document.getElementById('add-item-input-container');\n    if (!container) {\n        console.log(`Input container with id \"add-item-input-container\" not found.`);\n        return;\n    }\n    // Input box for item value\n    const input = document.createElement('input');\n    input.type = 'text';\n    input.placeholder = 'Enter item value';\n    input.maxLength = 20;\n    input.style.display = 'block';\n    input.style.marginBottom = '8px';\n    container.appendChild(input);\n    const button = document.createElement('button');\n    button.id = 'add-item-btn';\n    button.textContent = 'Add Element';\n    container.appendChild(button);\n    function addItem() {\n        const value = input.value.trim();\n        if (value) {\n            items.push(value);\n            input.value = '';\n            document.dispatchEvent(new Event('refreshUI'));\n        }\n    }\n    button.addEventListener('click', addItem);\n    input.addEventListener('keydown', (e)=>{\n        if (e.key === 'Enter') addItem();\n    });\n}\nfunction $d9f8d6210fe3edfa$export$a13597201127e9f2(items = [], bloom) {\n    const container = document.getElementById('add-item-container');\n    if (!container) {\n        console.log(`Container with id \"add-item-container\" not found.`);\n        return;\n    }\n    container.innerHTML = '';\n    const listDiv = document.createElement('div');\n    listDiv.id = 'left-list';\n    listDiv.className = 'list-elements';\n    container.appendChild(listDiv);\n    function renderList() {\n        listDiv.innerHTML = '';\n        items.forEach((item)=>{\n            const itemDiv = document.createElement('div');\n            itemDiv.className = 'list-item';\n            itemDiv.textContent = item;\n            listDiv.appendChild(itemDiv);\n            bloom.add(item);\n        });\n    }\n    renderList();\n}\n\nfunction $d9f8d6210fe3edfa$export$99b25b3095108407(containerId, bloom) {\n    const container = document.getElementById(containerId);\n    if (!container) {\n        console.log(`Container with id \"${container}\" not found.`);\n        return;\n    }\n    container.innerHTML = '';\n    Promise.resolve((parcelRequire(\"1REjr\"))).then((module)=>{\n        const bitsDiv = document.createElement('div');\n        bitsDiv.className = 'bloom-filter-elements';\n        bloom.bits.forEach((bit, i)=>{\n            const itemDiv = document.createElement('div');\n            itemDiv.className = 'list-item';\n            itemDiv.textContent = bit ? '1' : '0';\n            itemDiv.title = `Bit ${i}`;\n            bitsDiv.appendChild(itemDiv);\n        });\n        container.appendChild(bitsDiv);\n    });\n}\nfunction $d9f8d6210fe3edfa$export$2b0c203c0dfa67bc(bloom) {\n    const container = document.getElementById('check-item-input-container');\n    if (!container) {\n        console.log(`Container with id \"check-item-input-container\" not found.`);\n        return;\n    }\n    const displayContainer = document.getElementById('check-item-container');\n    if (!displayContainer) {\n        console.log(`Container with id \"check-item-container\" not found.`);\n        return;\n    }\n    container.innerHTML = '';\n    //create input box\n    const input = document.createElement('input');\n    input.type = 'text';\n    input.placeholder = 'Enter item to check';\n    input.maxLength = 20;\n    input.style.display = 'block';\n    input.style.marginBottom = '8px';\n    container.appendChild(input);\n    //create check button\n    const button = document.createElement('button');\n    button.textContent = 'Check Item';\n    container.appendChild(button);\n    displayContainer.innerHTML = '';\n    const inputWordDiv = document.createElement('div');\n    inputWordDiv.id = 'right-list';\n    inputWordDiv.className = 'list-item';\n    displayContainer.appendChild(inputWordDiv);\n    inputWordDiv.style.opacity = '0';\n    const captionDiv = document.createElement('div');\n    captionDiv.id = 'caption';\n    captionDiv.className = 'caption';\n    displayContainer.appendChild(captionDiv);\n    function checkItem() {\n        const value = input.value.trim();\n        if (value) {\n            let contains = true;\n            inputWordDiv.textContent = value;\n            inputWordDiv.style.opacity = '1';\n            for(let i = 1; i <= bloom.hashCount; i++){\n                const pos = bloom.hash(value, i);\n                console.log(`pos: ${pos}`);\n                if (!bloom.bits[pos]) {\n                    contains = false;\n                    break;\n                }\n            }\n            captionDiv.textContent = contains ? `\"${value}\" is possibly in the set.` : `\"${value}\" is definitely not in the set.`;\n        } else {\n            inputWordDiv.style.opacity = '0';\n            captionDiv.textContent = '';\n        }\n    }\n    button.addEventListener('click', checkItem);\n    input.addEventListener('keydown', (e)=>{\n        if (e.key === 'Enter') checkItem();\n    });\n}\n\n\n\nvar $1REjr = parcelRequire(\"1REjr\");\nconst $dad545c909cfec2d$var$bloomSize = 10;\nconst $dad545c909cfec2d$var$hashCount = 2;\nconst $dad545c909cfec2d$var$bloom = new (0, $1REjr.BloomFilter)($dad545c909cfec2d$var$bloomSize, $dad545c909cfec2d$var$hashCount);\nconst $dad545c909cfec2d$var$listItems = [\n    'UFPB'\n];\nfunction $dad545c909cfec2d$var$refreshUI() {\n    (0, $d9f8d6210fe3edfa$export$a13597201127e9f2)($dad545c909cfec2d$var$listItems, $dad545c909cfec2d$var$bloom);\n    (0, $d9f8d6210fe3edfa$export$99b25b3095108407)('bloom-filter-container', $dad545c909cfec2d$var$bloom);\n    (0, $d9f8d6210fe3edfa$export$2b0c203c0dfa67bc)($dad545c909cfec2d$var$bloom);\n}\ndocument.addEventListener('refreshUI', ()=>{\n    $dad545c909cfec2d$var$refreshUI();\n});\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    (0, $d9f8d6210fe3edfa$export$a6ac03347624a471)($dad545c909cfec2d$var$listItems);\n    $dad545c909cfec2d$var$refreshUI();\n});\n\n\n//# sourceMappingURL=bloom_filter_va.8ecedb5a.js.map\n","// Simple Bloom Filter implementation\n\nexport class BloomFilter {\n    constructor(size = 10, hashCount = 3) {\n        this.size = size;\n        this.hashCount = hashCount;\n        this.bits = new Array(size).fill(false);\n    }\n\n    // Simple hash functions\n    hash(str, seed) {\n        let hash = 0;\n        for (let i = 0; i < str.length; i++) {\n            hash = (hash * seed + str.charCodeAt(i)) % this.size;\n        }\n        return hash;\n    }\n\n    add(item) {\n        for (let i = 1; i <= this.hashCount; i++) {\n            const pos = this.hash(item, i);\n            this.bits[pos] = true;\n        }\n    }\n\n    contains(item) {\n        for (let i = 1; i <= this.hashCount; i++) {\n            const pos = this.hash(item, i);\n            if (!this.bits[pos]) return false;\n        }\n        return true;\n    }\n}\n","import { renderDynamicList, renderBloomFilterBits, checkItemInBloomFilter, addItemToDynamicList } from './src/list.js';\nimport { BloomFilter } from './src/bloomFilter.js';\n\nconst bloomSize = 10;\nconst hashCount = 2;\nconst bloom = new BloomFilter(bloomSize, hashCount);\nconst listItems = ['UFPB'];\n\n\nfunction refreshUI () {\n    renderDynamicList(listItems, bloom);\n    renderBloomFilterBits('bloom-filter-container', bloom);\n    checkItemInBloomFilter(bloom);\n}\n\ndocument.addEventListener('refreshUI', () => {\n    refreshUI();\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    addItemToDynamicList(listItems);\n    refreshUI();\n});","export function addItemToDynamicList(items = []) {\n    const container = document.getElementById('add-item-input-container');\n    if(!container)\n    {\n        console.log(`Input container with id \"add-item-input-container\" not found.`);\n        return;\n    }\n\n    // Input box for item value\n    const input = document.createElement('input');\n    input.type = 'text';\n    input.placeholder = 'Enter item value';\n    input.maxLength = 20;\n    input.style.display = 'block';\n    input.style.marginBottom = '8px';\n    container.appendChild(input);\n    \n    const button = document.createElement('button');\n    button.id = 'add-item-btn';\n    button.textContent = 'Add Element';\n    container.appendChild(button);\n\n    function addItem() {\n        const value = input.value.trim();\n        if (value) {\n            items.push(value);\n            input.value = '';\n            document.dispatchEvent(new Event('refreshUI'));\n        }\n    }\n    button.addEventListener('click', addItem);\n    input.addEventListener('keydown', (e) => {\n        if (e.key === 'Enter') {\n            addItem();\n        }\n    });\n\n}\n\n// Render a dynamic list in a given container\nexport function renderDynamicList(items = [], bloom) {\n    const container = document.getElementById('add-item-container');\n    if(!container)\n    {\n        console.log(`Container with id \"add-item-container\" not found.`);\n        return;\n    }\n\n    container.innerHTML = '';\n    const listDiv = document.createElement('div');\n    listDiv.id = 'left-list';\n    listDiv.className = 'list-elements';\n    container.appendChild(listDiv);\n\n    function renderList() {\n        listDiv.innerHTML = '';\n        items.forEach(item => {\n            const itemDiv = document.createElement('div');\n            itemDiv.className = 'list-item';\n            itemDiv.textContent = item;\n            listDiv.appendChild(itemDiv);\n            bloom.add(item);\n        });\n    }\n    renderList();\n}\n\n// Render bloom filter bits in a given container\nexport function renderBloomFilterBits(containerId, bloom) {\n    const container = document.getElementById(containerId);\n    if(!container)\n    {\n        console.log(`Container with id \"${container}\" not found.`);\n        return;\n    }\n\n    container.innerHTML = '';\n    import('./bloomFilter.js').then(module => {\n        const bitsDiv = document.createElement('div');\n        bitsDiv.className = 'bloom-filter-elements';\n        bloom.bits.forEach((bit, i) => {\n            const itemDiv = document.createElement('div');\n            itemDiv.className = 'list-item';\n            itemDiv.textContent = bit ? '1' : '0';\n            itemDiv.title = `Bit ${i}`;\n            bitsDiv.appendChild(itemDiv);\n        });\n        container.appendChild(bitsDiv);\n    });\n}\n\nexport function checkItemInBloomFilter(bloom) {\n    const container = document.getElementById('check-item-input-container');\n    if(!container)\n    {\n        console.log(`Container with id \"check-item-input-container\" not found.`);\n        return;\n    }\n    \n    const displayContainer = document.getElementById('check-item-container');\n    if(!displayContainer)\n    {\n        console.log(`Container with id \"check-item-container\" not found.`);\n        return;\n    }\n\n    container.innerHTML = '';\n\n    //create input box\n    const input = document.createElement('input');\n    input.type = 'text';\n    input.placeholder = 'Enter item to check';\n    input.maxLength = 20;\n    input.style.display = 'block';\n    input.style.marginBottom = '8px';\n    container.appendChild(input);\n    \n    //create check button\n    const button = document.createElement('button');\n    button.textContent = 'Check Item';\n    container.appendChild(button);\n\n    displayContainer.innerHTML = '';\n\n    const inputWordDiv = document.createElement('div');\n    inputWordDiv.id = 'right-list';\n    inputWordDiv.className = 'list-item';\n    displayContainer.appendChild(inputWordDiv);\n    inputWordDiv.style.opacity = '0';\n\n    const captionDiv = document.createElement('div');\n    captionDiv.id = 'caption';\n    captionDiv.className = 'caption';\n    displayContainer.appendChild(captionDiv);\n\n    function checkItem() {\n        const value = input.value.trim();\n        if (value) {\n            let contains = true;\n            inputWordDiv.textContent = value;\n            inputWordDiv.style.opacity = '1';\n            for (let i = 1; i <= bloom.hashCount; i++) {\n                const pos = bloom.hash(value, i);\n                console.log(`pos: ${pos}`);\n                if (!bloom.bits[pos]) {\n                    contains = false;\n                    break;\n                }\n            }\n\n            captionDiv.textContent = contains ? `\"${value}\" is possibly in the set.` : `\"${value}\" is definitely not in the set.`;\n        }\n        else {\n            inputWordDiv.style.opacity = '0';\n            captionDiv.textContent = '';\n        }\n    }\n\n    button.addEventListener('click', checkItem);\n    input.addEventListener('keydown', (e) => {\n        if (e.key === 'Enter') {\n            checkItem();\n        }\n    });\n}"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$15ba02f13978e1c5$export$fbc160adde9cf656","set","s","enumerable","configurable","size","hashCount","bits","Array","fill","hash","str","seed","i","length","charCodeAt","add","item","pos","contains","$dad545c909cfec2d$var$bloom","$1REjr","BloomFilter","$dad545c909cfec2d$var$listItems","$dad545c909cfec2d$var$refreshUI","items","bloom","container","document","getElementById","console","log","innerHTML","listDiv","createElement","className","appendChild","forEach","itemDiv","textContent","containerId","Promise","resolve","then","bitsDiv","bit","title","displayContainer","input","type","placeholder","maxLength","style","display","marginBottom","button","inputWordDiv","opacity","captionDiv","checkItem","value","trim","addEventListener","e","key","addItem","push","dispatchEvent","Event"],"version":3,"file":"bloom_filter_va.8ecedb5a.js.map"}